{
  "extends": [
    "eslint:recommended",
    "plugin:eslint-plugin-react/recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:regexp/recommended"
  ],
  "plugins": ["react", "no-unsanitized", "prototype-pollution-security-rules"],
  "env": {
    "es6": true,
    "node": true,
    "browser": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    }
  },
  "rules": {
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "complexity": ["warn", 15],
    "max-depth": ["warn", 4],

    "padding-line-between-statements": [
      "warn",
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      {
        "blankLine": "always",
        "prev": ["block-like", "multiline-block-like"],
        "next": ["const", "let", "var"]
      },
      {
        "blankLine": "always",
        "prev": ["multiline-block-like", "multiline-expression"],
        "next": ["multiline-block-like", "multiline-expression"]
      },
      { "blankLine": "always", "prev": "*", "next": "return" }
    ],

    "import/no-duplicates": ["error", { "considerQueryString": true }],
    "import/order": [
      "error",
      {
        "pathGroups": [
          {
            "pattern": "react",
            "position": "before",
            "group": "external"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"], // allow react to be handled differently (above)
        "groups": [
          "builtin", // import fs from 'fs';
          "external", // import _ from 'lodash';
          "internal", // import foo from 'src/foo'; (aliases)
          "parent", // import foo from '../foo';
          "sibling", // import bar from './bar';
          "index", // import main from '.';
          "type" // import type { Foo } from 'foo';
        ],
        "alphabetize": { "order": "asc", "caseInsensitive": true },
        "newlines-between": "never"
      }
    ],

    /** react rules */
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/boolean-prop-naming": "error",
    "react/button-has-type": "error",
    "react/default-props-match-prop-types": "error",
    "react/destructuring-assignment": "error",
    "react/display-name": "error",
    "react/forbid-component-props": "error",
    "react/forbid-dom-props": "error",
    "react/forbid-elements": "error",
    "react/forbid-prop-types": "error",
    "react/forbid-foreign-prop-types": "error",
    "react/no-access-state-in-setstate": "error",
    "react/no-array-index-key": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-mount-set-state": "error",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-multi-comp": "error",
    "react/no-redundant-should-component-update": "error",
    "react/no-render-return-value": "error",
    /*"react/no-set-state": "error",*/
    "react/no-typos": "error",
    "react/no-string-refs": "error",
    "react/no-this-in-sfc": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/no-unsafe": "error",
    "react/no-unused-prop-types": "error",
    "react/no-unused-state": "error",
    "react/no-will-update-set-state": "error",
    "react/prefer-es6-class": "error",
    "react/prefer-stateless-function": "error",
    "react/prop-types": "error",
    "react/react-in-jsx-scope": "error",
    "react/require-default-props": "error",
    "react/require-optimization": "error",
    "react/require-render-return": "error",
    "react/self-closing-comp": "error",
    "react/sort-comp": "error",
    "react/sort-prop-types": "error",
    "react/style-prop-object": "error",
    "react/void-dom-elements-no-children": "error",
    "react/jsx-boolean-value": "error",
    "react/jsx-first-prop-new-line": "error",
    "react/jsx-handler-names": "error",
    "react/jsx-key": "error",
    /* "react/jsx-max-props-per-line": "error", */
    "react/jsx-no-bind": [
      "error",
      {
        "ignoreDOMComponents": true,
        "allowFunctions": true
      }
    ],
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-curly-brace-presence": "error",
    "react/jsx-fragments": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-props-no-multi-spaces": "error",
    /* "react/jsx-sort-default-props": "error",
        "react/jsx-sort-props": "error", */
    "react/jsx-wrap-multilines": "error",

    /** no-unsanitized rules**/
    "no-unsanitized/method": "error",
    "no-unsanitized/property": "error",

    /** prototype-pollution-security-rules rules**/
    "prototype-pollution-security-rules/detect-merge": 1,
    "prototype-pollution-security-rules/detect-merge-objects": 1,
    "prototype-pollution-security-rules/detect-merge-options": 1,
    "prototype-pollution-security-rules/detect-deep-extend": 1
  }
}
